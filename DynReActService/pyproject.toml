[tool.poetry]
name = "dynreact-service"
version = "0.1.0" # Replace with actual version
description = "DynReAct Service" # Replace with actual description
authors = ["Your Name <you@example.com>"] # Replace with actual author
readme = "README.md" # Adjust if README file is different

packages = [
    { include = "dynreact", from = "." },
    { include = "run.py" }
]

[tool.poetry.dependencies]
python = "^3.10" # Adjust Python version as needed
numpy = ">=1.24,<3" 
pandas = ">=2,<3" 
python-dotenv = ">=1.0.0,<2.0" 
pydantic = ">=2.7,<3" 
fastapi = ">=0.115.2,<1.0" 
uvicorn = {extras = ["standard"], version = ">=0.32,<1.0"}
ldap3 = ">=2.9,<3.0" 
plotly = ">=5.24.1,<6" 
dash = ">=2.18.1,<3" 
dash-ag-grid = ">=31.2,<32" 
dash-cytoscape = ">=1.0.2,<2" 
Flask = ">=3.0,<4" 
Flask-Login = ">=0.6.3,<1" 
requests = ">=2.32.3,<3" 
#openpyxl = ">=3.1.2,<4" # Commented out as in requirements.txt 
starlette = ">=0.30.0,<0.47"
dynreact-base = { path = "../DynReActBase", develop = true } 
dynreact-midtermplanning = { path = "../MidTermPlanning", develop = true }
dynreact-shortterm = { path = "../ShortTermPlanning", develop = true }
dynreact-sampleusecase = { path = "../SampleUseCase", develop = true }
dynreact-lotcreationras = { path = "../../LotCreationRas", develop = true}
dynreact-longtermplanning = { path = "../../LongTermPlanning", develop = true}
dynreact-stp_gui_ras = { path = "../../ShortTermRAS", develop = true}
dynreact-performancemodel_vsp = { path = "../../performance-models-ras/PerformanceModel_VSP", develop = true}

[tool.poetry.group.dev.dependencies]
mkdocs = ">=1.6,<2" 
mkdocstrings = "^0.18.0" 
#"mkdocs-material" = ">=9.5.44,<10" # Commented out as in requirements-dev.txt 

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
